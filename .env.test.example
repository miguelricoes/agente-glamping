# üß™ .env.test.example - Variables de Entorno para Testing Local
# Copia este archivo como .env.test para configurar tu entorno de testing

# ===============================================================================
# üîß CONFIGURACI√ìN B√ÅSICA DE TESTING
# ===============================================================================

# Entorno de ejecuci√≥n
ENV=test
LOG_LEVEL=DEBUG
TESTING_MODE=true
MOCK_EXTERNAL_APIS=false

# ===============================================================================
# üåê PUERTOS DE SERVICIOS (PERSONALIZABLES)
# ===============================================================================

# Puerto principal de la aplicaci√≥n
APP_PORT=8080

# Puerto de PostgreSQL (para acceso directo si es necesario)
POSTGRES_PORT=5432

# Puerto de Redis (para acceso directo si es necesario) 
REDIS_PORT=6379

# Puerto de Adminer (administrador de base de datos)
ADMINER_PORT=8081

# Puerto de Redis Commander (administrador de Redis)
REDIS_COMMANDER_PORT=8082

# ===============================================================================
# üóÑÔ∏è CONFIGURACI√ìN DE BASE DE DATOS
# ===============================================================================

# Base de datos PostgreSQL de testing
POSTGRES_HOST=postgres-test
POSTGRES_DB=glamping_test
POSTGRES_USER=glamping_user
POSTGRES_PASSWORD=glamping_pass

# URL completa de base de datos (se construye autom√°ticamente)
DATABASE_URL=postgresql://glamping_user:glamping_pass@postgres-test:5432/glamping_test

# ===============================================================================
# üìä CONFIGURACI√ìN DE REDIS
# ===============================================================================

# Redis para cache y sesiones de testing
REDIS_HOST=redis-test
REDIS_URL=redis://redis-test:6379/0

# ===============================================================================
# üîë APIS EXTERNAS (REQUERIDAS PARA TESTING COMPLETO)
# ===============================================================================

# OpenAI API - REQUERIDA para funcionalidad de IA
# Obt√©n tu API key en: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ===============================================================================
# üì± TWILIO PARA WHATSAPP (OPCIONAL PARA TESTING)
# ===============================================================================

# Twilio Account SID - Para testing de WhatsApp
# Obt√©n en: https://console.twilio.com/
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Twilio Auth Token - Para autenticaci√≥n
TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# N√∫mero de tel√©fono de Twilio (formato internacional)
TWILIO_PHONE_NUMBER=+1234567890

# ===============================================================================
# üîê ADMINISTRADORES DE SERVICIOS
# ===============================================================================

# Credenciales para Redis Commander (admin web de Redis)
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASS=admin123

# ===============================================================================
# üèóÔ∏è CONFIGURACI√ìN DE BUILD
# ===============================================================================

# Target espec√≠fico del Dockerfile para testing (si existe)
BUILD_TARGET=

# Modo de build (development, test, production)
BUILD_MODE=test

# ===============================================================================
# üß™ CONFIGURACI√ìN ESPEC√çFICA DE TESTING
# ===============================================================================

# Habilitar rate limiting (false para testing m√°s r√°pido)
DISABLE_RATE_LIMITING=true

# Habilitar logs de debug detallados
DEBUG_LOGS=true

# Timeout para health checks (en segundos)
HEALTH_CHECK_TIMEOUT=10

# Interval para health checks (en segundos)  
HEALTH_CHECK_INTERVAL=15

# ===============================================================================
# üìä CONFIGURACI√ìN DE MONITOREO Y M√âTRICAS (OPCIONAL)
# ===============================================================================

# Habilitar m√©tricas de Prometheus (opcional)
ENABLE_PROMETHEUS_METRICS=false

# Habilitar Sentry para error tracking (opcional)
ENABLE_SENTRY=false
SENTRY_DSN=

# ===============================================================================
# üîç NOTAS DE CONFIGURACI√ìN
# ===============================================================================

# üìã INSTRUCCIONES DE USO:
# 1. Copia este archivo: cp .env.test.example .env.test
# 2. Configura las APIs requeridas (al menos OPENAI_API_KEY)
# 3. Ajusta puertos si hay conflictos en tu sistema
# 4. Ejecuta: docker-compose -f docker-compose.test.yml up

# üîë APIS REQUERIDAS M√çNIMAS:
# - OPENAI_API_KEY: Necesaria para funcionalidad b√°sica de IA
# - TWILIO_*: Opcional, solo para testing de WhatsApp

# üåê PUERTOS POR DEFECTO:
# - 8080: Aplicaci√≥n principal
# - 5432: PostgreSQL (acceso directo)
# - 6379: Redis (acceso directo)
# - 8081: Adminer (admin base de datos)
# - 8082: Redis Commander (admin Redis)

# üîí SEGURIDAD:
# - Estas son configuraciones SOLO para testing local
# - NO uses estas configuraciones en producci√≥n
# - Mant√©n este archivo fuera del control de versiones
# - Las contrase√±as aqu√≠ son para desarrollo √∫nicamente